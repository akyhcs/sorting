//{ Driver Code Starts
import java.io.*;
import java.util.*;

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int t =
            Integer.parseInt(br.readLine().trim()); // Inputting the testcases
        while (t-- > 0) {
            int n = Integer.parseInt(br.readLine().trim());
            int arr[] = new int[n];
            String inputLine[] = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                arr[i] = Integer.parseInt(inputLine[i]);
            }
            System.out.println(new Solution().maxIndexDiff(arr, n));
        }
    }
}
// } Driver Code Ends


class Solution {

    int maxIndexDiff(int arr[], int n) {
        		  int elementIndex[][] = new int[arr.length][2];
		  for(int i =0 ;i<arr.length;i++)
		  {
			  elementIndex[i][0] = arr[i];
			  elementIndex[i][1] = i;
		  }
		  Arrays.sort(elementIndex,(elementIndexRowOne,elementIndexRowTwo)->{
			  return elementIndexRowOne[0] - elementIndexRowTwo[0];
		  });
		  int maxIndex = elementIndex[arr.length-1][1];
		  int maxDiff = 0;
		  for(int i = arr.length-2;i>=0;i--)
		  {
			  maxDiff = Math.max(maxDiff, maxIndex - elementIndex[i][1]) ;
			  maxIndex  = Math.max(maxIndex,elementIndex[i][1]);
			  
		  }
		  
		return maxDiff;
    }
}

//https://www.geeksforgeeks.org/problems/maximum-index3307/1?itm_source=geeksforgeeks&itm_medium=article&itm_campaign=practice_card
