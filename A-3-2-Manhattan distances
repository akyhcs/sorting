//https://www.geeksforgeeks.org/sum-manhattan-distances-pairs-points/
/* package codechef; // don't place package name! */
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
public class Main
{
   	public static void main(String[] args) throws NumberFormatException, IOException {
		InputStreamReader inputStreamReader = new InputStreamReader(System.in);
		BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
		int n = Integer.parseInt(bufferedReader.readLine().trim());
		int xCor[] = new int[n];
		int yCor[] = new int[n];
		long modulo = (long) (1e9  + 7);
		for(int i = 0 ;i<n;i++)
		{
			String [] currentCord = bufferedReader.readLine().trim().split(" ");
			xCor[i] = Integer.parseInt(currentCord[0]);
			yCor[i] = Integer.parseInt(currentCord[1]);
		}
		System.out.println((calculateManhatanDistance(xCor) + calculateManhatanDistance(yCor))%modulo);
		inputStreamReader.close();
		bufferedReader.close();
	}

	private static long calculateManhatanDistance(int[] cordinates) {
		long prefixSum = 0l;
		long totalDis = 0l;
		long modulo = (long) (1e9  + 7);
		Arrays.sort(cordinates);
		for(int i = 0 ;i<cordinates.length;i++)
		{
			totalDis = totalDis + cordinates[i]*i - prefixSum;
			prefixSum = prefixSum + cordinates[i];
		//	totalDis = totalDis%modulo;
		}
		return totalDis;
	}
}
========================================================================================================================================================

Given n integer coordinates. The task is to find sum of Manhattan distance between all pairs of coordinates. Answer might be large. Take modulo by 
10^9+7
.
Manhattan Distance between two points (x1, y1) and (x2, y2) is:
|x1 – x2| + |y1 – y2|

Input Format

First line contains 
1≤n≤105. Next n lines contain two integers 
−
1000≤x,y≤1000.

Output Format

Sum of Manhattan distance between every pair of point modulo 
10^9+7.

Example 1

Input

4
-1 5
1 6
3 5
2 3

Output

22

Explanation

Distance of { 1, 6 }, { 3, 5 }, { 2, 3 } from { -1, 5 } are 3, 4, 5 respectively.

Therefore, sum = 3 + 4 + 5 = 12

Distance of { 3, 5 }, { 2, 3 } from { 1, 6 } are 3, 4 respectively. Therefore, sum = 12 + 3 + 4 = 19

Distance of { 2, 3 } from { 3, 5 } is 3. Therefore, sum = 19 + 3 = 22.

Example
Input
4
-1 5
1 6
3 5
2 3
Output
22
