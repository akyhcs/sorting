import java.util.Arrays;

public class RadixSort {
    // Function to get the maximum element in the array
    static int getMax(int[] arr) {
        int max = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] > max) {
                max = arr[i];
            }
        }
        return max;
    }

    // Counting sort for a particular digit represented by exp
    static void countingSort(int[] arr, int exp) {
        int n = arr.length;
        int[] output = new int[n];
        int[] count = new int[10];
        
        // Store the count of occurrences in count[]
        for (int i = 0; i < n; i++) {
            int index = (arr[i] / exp) % 10;
            count[index]++;
        }
/**In the code segment:

int index = (arr[i] / exp) % 10;

this part arr[i] / exp isolates a specific digit from the number in arr[i], and % 10 helps get that digit.

Here's a breakdown:

1. arr[i] / exp: Divides arr[i] by exp to shift the number rightward, essentially bringing the desired digit to the "units" place. For example:

If exp = 1, this operation targets the units digit.

If exp = 10, it targets the tens digit.

If exp = 100, it targets the hundreds digit.



2. % 10: After dividing, % 10 isolates the units digit of the result, which is the target digit we want to sort by in this pass of counting sort.



Example

Suppose arr[i] = 123:

If exp = 1: (123 / 1) % 10 results in 3, the units digit.

If exp = 10: (123 / 10) % 10 results in 2, the tens digit.

If exp = 100: (123 / 100) % 10 results in 1, the hundreds digit.


This method allows radix sort to process the array digit-by-digit, starting from the least significant to the most significant.*/



        // Update count[i] so that it contains the position of this digit in output array
        for (int i = 1; i < 10; i++) {
            count[i] += count[i - 1];
        }

        // Build the output array
        for (int i = n - 1; i >= 0; i--) {
            int index = (arr[i] / exp) % 10;
            output[count[index] - 1] = arr[i];
            count[index]--;
        }

        // Copy the output array to arr[]
        for (int i = 0; i < n; i++) {
            arr[i] = output[i];
        }
    }

    // Main function to implement Radix Sort
    static void radixSort(int[] arr) {
        // Find the maximum number to know the number of digits
        int max = getMax(arr);

        // Apply counting sort for every digit, starting from the least significant digit
        for (int exp = 1; max / exp > 0; exp *= 10) {
            countingSort(arr, exp);
        }
    }

    // Driver code
    public static void main(String[] args) {
        int[] arr = {170, 45, 75, 90, 802, 24, 2, 66};
        System.out.println("Original Array: " + Arrays.toString(arr));
        radixSort(arr);
        System.out.println("Sorted Array: " + Arrays.toString(arr));
    }
}
